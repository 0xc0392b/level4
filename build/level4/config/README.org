#+TITLE:  level4 elixir configuration
#+AUTHOR: William Santos
#+EMAIL:  w@wsantos.net

#+ID:               level4.elixir-config
#+LANGUAGE:         en
#+STARTUP:          showall
#+EXPORT_FILE_NAME: level4-elixir-configuration


** ecto repo
The ecto repo maps to a Postgres server, which must already be
running. In a development setting it can be started manually:
#+BEGIN_SRC bash
  docker run -d \
	 -e POSTGRES_DB=level4 \
	 -e POSTGRES_USER=level4 \
	 -e POSTGRES_PASSWORD=level4 \
	 -e POSTGRES_HOST_AUTH_METHOD=password \
	 -p 5432:5432 \
	 postgres:latest
#+END_SRC
This will start a Postgres container and bind the default port
=5432= to the host system. Then it is accessible via =127.0.0.1:5432=.
The username, password, and database name should line-up with the
values in =config.exs=. Note there is no volume parameter.

** http server
This is the Plug + Cowboy configuration options documented in
https://hexdocs.pm/plug_cowboy/Plug.Cowboy.html. Only host and
port are significant; the other defaults work fine. I might add
stream handlers later.
See https://ninenines.eu/docs/en/cowboy/2.5/guide/streams/.

** exchange translation scheme mappings
A mapping from exchange name and market type to their respective
translation schemes defined in =lib/exchanges=. Each exchange name
should correspond to an exchange record in the exchange repo. See
=priv/repo/migrations/README.org= for schema info.

When starting a new market, the start script will walk this map:
exchange name -> market type -> market lambda. The lambda function
will return parameters used to build an internal representation
of a market before starting a market supervision tree and data feed.
See =lib/application.ex=.
